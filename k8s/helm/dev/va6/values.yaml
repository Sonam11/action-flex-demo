global:
  clusterName: ethos102-stage-va6
  serviceRegion: va6
  cloudType: AWS
  accessLevel: corp
  clusterType: STAGE
  serviceEnvironment: Dev
  gitOrg: sonam11
  gitRepo: github-actions-demo
  adobeOwner: stayal
  adobeArchPath: CT.Ethos.Flex.canex
  adobeClass: AppServergit
ethos-k8s-helm-templates:
  ethos-vault-secrets-operator:
    # The vault secret operator can be disabled by removing or commenting out this field
    enabled: true
    evo:
      vault:
        authMethod: approle
        # Mount path for the approle being used for authentication
        # If you are using your own approle, the mount path should be auth/approle
        # If you are using an approle created by provisioner, the mount path should be auth/approle_ethos
        appRolePath: auth/approle_ethos
  rollout:
    # Mandatory
    # Deployment strategy to choose.
    strategy:
      #  Rolling is a deployment strategy which performs progressive deployment by doing a Canary without any defined steps.
      rolling:
        # Mandatory
        #  maxSurge defines the maximum number of replicas the rollout can create to move to the correct ratio set by the last setWeight.
        #  Max Surge can either be an integer or percentage as a string (i.e. "20%")
        maxSurge: 25%
        # Mandatory
        #  The maximum number of pods that can be unavailable during the update.
        #  Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxSurge is 0.
        maxUnavailable: 0%
    # Optional
    # The number of old ReplicaSets to retain.
    # Default is 2
    revisionHistoryLimit: 5
  deployment:
    name: deploy1
    scaling:
      minContainers: 2
      maxContainers: 5
     
      cpuTargetValue: 50
    containers:
      cont1:
        # Mandatory
        requests:
          # Mandatory
          # CPU request
          cpu: 1
          # Mandatory
          # Memory request
          memory: 2048
        envVars:
          nonSecrets: {}
          secrets: {}
        image:
          repository: docker-python-app-blr-release.dr-uw2.adobeitc.com/ethos-orca/python-app-blr
          name: python-app-blr-img
          # Mandatory
          # This is just a placeholder
          # No need to update this as it will be modified by argo promote env workflow
          tag: eb1d4369f53c347b5df41a820c3f51b67558d8bb
        # Mandatory
        # Liveness Probe configurations for a container
        livenessProbe:
          path: /ping
          # Mandatory
          port: 8080
          gracePeriod: 30
          timeout: 5
        readinessProbe:
          path: /ping
          # Mandatory
          port: 8080
          gracePeriod: 30
          timeout: 5
  # Ingress related configurations
  # Mandatory if you want to expose the service outside of the cluster or if you want to use canary/bluegreen deployment
  # Recommended if you are using rolling or blue green deployment, it doesn't support canary deployment as of today
  # Specify only one of ingressRoute or ingress
  ingress:
    # Type of ingress being used. Currently we only support httpProxy
    httpProxy:
      # Mandatory
      # The port used by the ingress to expose the service
      port: 8080
      # Mandatory
      # Configurable health check
      healthCheck:
        # Mandatory
        path: /ping
        # Optional
        # Number of consecutive health check failures required before considering a service to be unhealthy
        # Link: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.1/guide/ingress/annotations/#healthy-threshold-count
        # Default = 3
        unhealthyThresholdCount: 3
        # Optional
        # Number of consecutive health check successes required before considering an unhealthy service healthy
        # Link: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.1/guide/ingress/annotations/#unhealthy-threshold-count
        # Default = 1
        healthyThresholdCount: 1
        # Optional
        # Number of 'seconds' after which a health check is considered a failure
        # regardless of the response.
        # Default = 5 seconds, ranges from 2 to 26. (seconds)
        timeout: 5
      tlsSecretName: heptio-contour/cluster-ssl-alternate
      # Optional
      # FQDN for your application. See https://developers.corp.adobe.com/ethos-flex/docs/customizing-dns-for-your-service.md for custom fqdn
      # fqdn: git-org-git-repo.corp.cluster-name.ethos.adobe.net

      # Optional
      # If fqdn is set, this field is ignored.
      # When set to true and the fqdn is not set, a .cloud.adobe.io endpoint generated by provisioner will be set as the FQDN.
      # If it is set to false or is not mentioned and fqdn is unset, a .ethos.adobe.net endpoint will be used.
      useAutoProvisionedFQDN: true
  service:
    # Mandatory
    # List of ports being exposed by the service.
    # Currently we only support one port
    ports:
      - # Port being exposed. If using ingressroute, at least one port from the list must match the ingressroute port
        # Ex: 8080
        port: 8080
        # Protocol used by the service object
        # Ex: TCP
        protocol: TCP
        # Container port that is exposed through the service
        # Ex: 80
        targetPort: 8080
